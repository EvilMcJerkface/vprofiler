#include "WrapperGenerator.h"

using namespace std;

WrapperGenerator::WrapperGenerator(shared_ptr<unordered_map<string, 
                                   FunctionPrototype>> _prototypeMap,
                                   string pathPrefix=""):
                                   prototypeMap(_prototypeMap) {
    headerFile.open(pathPrefix + "VProfEventWrappers.h");
    implementationFile.open(pathPrefix + "VProfEventWrappers.cpp");

    const string generatedFileMessage = 
        " ///////////////////////////////////////////////////// "
        " // Note that this file was generated by VProfiler. // "
        " // Please do not change the contents of this file! // "
        " ///////////////////////////////////////////////////// \n\n";

    headerFile << generatedFileMessage; 
    implementationFile << generatedFileMessage;
}

void WrapperGenerator::GenerateHeader() {
    headerFile << "#include \"TraceTool.h\"\n\n";

    for (auto kv : *prototypeMap) {
        headerFile << kv.second.functionPrototype + ";\n\n";
    }

    headerFile.close();
}

void WrapperGenerator::GenerateImplementations() {
    implementationFile << "#include \"VProfEventWrappers.h\"\n\n";

    for (auto kv : *prototypeMap) {
        implementationFile << kv.second.functionPrototype + " {\n";
        implementationFile << "TraceTool::LogEvent(" + kv.second.eventID + ");\n";

        // Not quite right.
        implementationFile << kv.second.staticCallName != "" ? 
                              kv.second.staticCallName :
                              kv.second.nonStaticCallName << + "(";
    }
}
