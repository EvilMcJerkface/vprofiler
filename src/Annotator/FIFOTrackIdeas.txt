Maybe create something similar to functions file?  Basically, say a type to wrap, then say what type of object that type is.
I think we need a shared memory lock to log closing/opening of pipes/FIFOs.

General Notes:

    FIFOs: Track open calls.  Want to track writes/reads to/from a file that was opened iff the file was
           created by a mknod call with S_IFIFO as part of its argument.  This might require some
           more complicated logic since we really want to know if the # in the second argument to mknod
           has the S_IFIFO bit set. Note that FIFOs can be created via mkfifo on command line.  Is there 
           a way to track this type of FIFO?

    Pipes: First create read and write hash tables, H: file descriptor -> paired file descriptor
           Here, paired file descriptor is the write end of the pipe in the read hash table and the
           read end of the pipe in the write hash table. Then, create hash table of structs as with data as follows:
           struct PipeData {
               std::pair<int, int> pipe;
               std::string logString; // logString = "<fd1> -> <fd2>" without spaces for overhead savings
           }
           Then, log every call to read and write where the file descriptor argument is in the pipe hash tables.

    Message Queues: Track all calls to msgsnd and msgrcv.  Log must contain first argument of msgsnd and msgrcv 
                    somewhere.  This argument is the message queue ID number.  Must track key of msgget, this will
                    identify msgqueue file descriptors.

    Shared Memory: Only alteration we need to make to original solution is we need to be able to determine whether
                   an object is located in shared memory or not.  If it is, we should note this in the logs.

Implementation Notes:

    FIFOs: Wrap mknod, open, read, write calls.  mknod wrapper must cache which file names are FIFOs.  open
           wrapper must cache file descriptors to be tracked.  read and write wrappers must log if their 
           file descriptors are to be tracked.  This will probably require shared memory, since some

    Pipes: Wrap pipe, read, write.  pipe wrapper must cache the pipe file descriptor pairs as described
           in section (General Notes - Pipes). read and write wrappers should be the same wrappers as
           section (Annotator Notes - FIFOs).

    Message Queues: Wrap msgsnd, msgrcv.  Both wrappers must log the sending/receiving action.  Log
                    must include message queue ID, the first argument of msgsnd and msgrcv.

    Shared Memory: Must wrap shmget, mmap.  Not entirely sure on exactly how to do this.  Will 
                   think about after FIFOs/Pipes/Message Queues are finished.
